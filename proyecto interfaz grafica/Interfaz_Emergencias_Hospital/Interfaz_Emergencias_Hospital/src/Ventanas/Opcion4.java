/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Clases.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Opcion4 extends javax.swing.JFrame {
    private Principal v1;
    /**
     * Creates new form Opcion4
     */
    public Opcion4() {
        initComponents();
    }
    public Opcion4(Principal aThis){
        initComponents();
        this.v1 = aThis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonMostar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        botonAtras = new javax.swing.JButton();
        campoHospitalX = new javax.swing.JTextField();
        campoSalaY = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PantallaPacientes = new javax.swing.JTable();
        BotonMoverPacientes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonMostar.setText("MOSTRAR");
        BotonMostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonMostar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 90, -1));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("MOVER PACIENTE DE URGENCIA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(225, 225, 225))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));

        botonAtras.setText("ATRAS");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(botonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(749, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(botonAtras)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 860, -1));
        getContentPane().add(campoHospitalX, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 160, 40));
        getContentPane().add(campoSalaY, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 160, 40));

        jLabel2.setText("Hospital X");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel3.setText("Sala y");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 60, -1));

        jScrollPane1.setViewportView(PantallaPacientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, 160));

        BotonMoverPacientes.setText("MOVER PACIENTES");
        BotonMoverPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMoverPacientesActionPerformed(evt);
            }
        });
        getContentPane().add(BotonMoverPacientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 300, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonMoverPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMoverPacientesActionPerformed
        // TODO add your handling code here:
        try {
            String HosX = campoHospitalX.getText();
            String SalaY = campoSalaY.getText();
            String titulos [] = {"NOMBRE","ID","URGENCIA","EDAD","CI"};
            DefaultTableModel pantalla = new DefaultTableModel(null,titulos);
            PilaHospital aux1 = new PilaHospital();
            if (!(HosX.equals("") && SalaY.equals(""))) {
                while (!v1.getHos().esVacia()) {                    
                    Hospital hos = v1.getHos().eli();
                    if (hos.getNombreHos().equals(HosX)) {
                        NodoPlanta R = hos.getPlanta().getP();
                        while (R!=null) {                            
                            PilaSala_Atencion aux2 = new PilaSala_Atencion();
                            while (!R.getSalaAtencion().esVacia()) {                                
                                Sala_Atencion sa = R.getSalaAtencion().eli();
                                if (sa.getNomSalaArea().equals(SalaY)) {
                                    LD_NormalPaciente auxPa = new LD_NormalPaciente();
                                    NodoPaciente Npa = sa.getPaciente().getP();
                                    while (Npa!=null) {                                        
                                        Paciente pa = Npa.getPaciente();
                                        NodoPaciente next = Npa.getSig();
                                        if (pa.getUrgencia().equals("Urgencia")) {
                                            auxPa.adiFinal(pa);
                                            if (Npa.getAnt()!=null) {
                                                Npa.getAnt().setSig(Npa.getSig());
                                            }
                                            if (Npa.getSig()!=null) {
                                                Npa.getSig().setAnt(Npa.getAnt());
                                            }
                                            if (Npa==sa.getPaciente().getP()) {
                                                sa.getPaciente().setP(Npa.getSig());
                                            }
                                        }
                                        Npa=next;
                                    }
                                    a√±adir_al_inicio(auxPa, sa);
                                }
                                aux2.adi(sa);
                            }
                            R.getSalaAtencion().vaciar(aux2);
                            R=R.getSig();
                        }
                    }
                    aux1.adi(hos);
                }
                PantallaPacientes.setModel(pantalla);
                v1.getHos().vaciar(aux1);
            }else{
                JOptionPane.showMessageDialog(null, "DATOS NO VALIDOS!!!");

            }
        } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "DATOS NO VALIDOS!!!");

        }
    }//GEN-LAST:event_BotonMoverPacientesActionPerformed

    private void BotonMostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostarActionPerformed
        // TODO add your handling code here:
        try {
            String HosX = campoHospitalX.getText();
            String SalaY = campoSalaY.getText();
            String titulos [] = {"NOMBRE","ID","URGENCIA","EDAD","CI"};
            DefaultTableModel pantalla = new DefaultTableModel(null,titulos);
            PilaHospital aux1 = new PilaHospital();
            if (!(HosX.equals("") && SalaY.equals(""))) {
                while (!v1.getHos().esVacia()) {                    
                    Hospital hos = v1.getHos().eli();
                    if (hos.getNombreHos().equals(HosX)) {
                        NodoPlanta R = hos.getPlanta().getP();
                        while (R!=null) {                            
                            PilaSala_Atencion aux2 = new PilaSala_Atencion();
                            while (!R.getSalaAtencion().esVacia()) {                                
                                Sala_Atencion sa = R.getSalaAtencion().eli();
                                if (sa.getNomSalaArea().equals(SalaY)) {
                                    NodoPaciente Npa = sa.getPaciente().getP();
                                    while (Npa!=null) {                                        
                                        Paciente pa = Npa.getPaciente();
                                        String fila[]={pa.getNombre(),pa.getId(),pa.getUrgencia(),Integer.toString(pa.getEdad()),Integer.toString(pa.getCi())};
                                        pantalla.addRow(fila);
                                        Npa=Npa.getSig();
                                    }
                                }
                                aux2.adi(sa);
                            }
                            R.getSalaAtencion().vaciar(aux2);
                            R=R.getSig();
                        }
                    }
                    aux1.adi(hos);
                }
                PantallaPacientes.setModel(pantalla);
                v1.getHos().vaciar(aux1);
            }else{
                JOptionPane.showMessageDialog(null, "DATOS NO VALIDOS!!!");

            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "DATOS NO VALIDOS!!!");

        }
        
    }//GEN-LAST:event_BotonMostarActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        // TODO add your handling code here:
        this.v1.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_botonAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Opcion4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Opcion4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Opcion4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Opcion4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Opcion4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonMostar;
    private javax.swing.JButton BotonMoverPacientes;
    private javax.swing.JTable PantallaPacientes;
    private javax.swing.JButton botonAtras;
    private javax.swing.JTextField campoHospitalX;
    private javax.swing.JTextField campoSalaY;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void a√±adir_al_inicio(LD_NormalPaciente a, Sala_Atencion sa) {
        NodoPaciente R = a.getP();
	    while (R != null) {
	        Paciente pa = R.getPaciente();
	        sa.getPaciente().adiPrimero(pa);
	        R = R.getSig();
	    }
    }
}
